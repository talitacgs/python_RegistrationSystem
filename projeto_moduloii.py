''' -*- coding: utf-8 -*- '''
"""projeto_MóduloII.ipynb
Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18UFMdiLsBi3CKyO33MIPrPM8f9-SGb5E

# Projeto:
DIVERSIDADE TECH - MÓDULO II
PROJETO: SISTEMA DE CADASTRO
PROFESSORES: HENRIQUE ASSIS, ALEX LIMA
ALUNAS: 
ANA CAROLINA DE OLIVEIRA LUZ
CELSINA DOS SANTOS AZEVEDO NETA
TALITA CAVALCANTI GOMES DOS SANTOS
"""

"""
# ======================================= #
# ----- I M P O R T A R --- J S O N ----- #
# ======================================= #
"""
import json

with open('projetoModuloII.json') as j:
    usuarios = json.load(j)

"""
# ======================================= #
# - A T U A L I Z A R --- A R Q U I V O - #
# ======================================= #
"""
def atualizarArquivo():
    json_object = json.dumps(usuarios, indent=4)
    with open("projetoModuloII.json", "w") as outfile:
        outfile.write(json_object)
    print('\nAlterações salvas com sucesso')


"""
# ======================================= #
# ----- I N S E R I R --- D A D O S ----- #
# ======================================= #
## Função para inserir os dados cadastrais
"""
def dados_cadastrais():
    name = input('Digite o nome: ')
    tentativas = 3
    while name == '' and tentativas > 0:
        print(f"\nInválido. Digite novamente. Você tem {tentativas} tentativas\n")
        name = input('Digite o nome: ')
        tentativas -= 1
        if tentativas == 0:
            name = False

    tel = input("Digite o telefone: ") or "Não Informado"
    endereco = input("Digite o endereço: ") or "Não Informado"

    return name, tel, endereco


"""
# ======================================= #
# -- V E R I F I C A --- U S U Á R I O -- #
# ======================================= #
"""
def verificaUsuarioValido(usuario_info):
    resposta = False
    if usuario_info.get('Status') == True:
        resposta = True
    return resposta


"""
# ======================================= #
# ------ M U D A R --- S T A T U S ------ #
# ======================================= #
função verificar usuario
"""
def mudar_status(**usuario):
    for i in usuarios:
        if usuarios[i]['Nome'] == name and usuarios[i]['Telefone'] == tel and usuarios[i]['Endereço'] == endereco:
            usuarios[i]['Status'] = True
            return usuarios[i]


"""
# ======================================= #
# - E N C O N T R A R --- U S U Á R I O - #
# ======================================= #
função encontrar usuário pelo id
"""
def encontrar_usuario(dict_usuarios):
    id_recebido = input('\nInsira o ID do usuário: ')

    cont = 3
    while (id_recebido not in dict_usuarios) and (cont > 0):
        id_recebido = input('\nID não encontrado. \nInsira o ID do usuário: ')
        cont -= 1

    if id_recebido not in dict_usuarios:
        print('\nVocê esgotou suas chances')
        return False
    else:
        return id_recebido


"""
# ======================================= #
# ---- F O R M A T A R --- D A D O S ---- #
# ======================================= #
"""
def formatarDadoUsuario(usuario_info):
    keys = ['Nome', 'Telefone', 'Endereço']
    values = [usuario_info.get('Nome'), usuario_info.get('Telefone'), usuario_info.get('Endereço')]
    print('')
    for key, value in zip(keys, values):
        print(f'{key}: {value}')

"""
# ======================================= #
# - F O R M A T A R -- D A D O S -- I D - #
# ======================================= #
"""
def formatarDadoUsuarioComId(usuario_id, usuario_info):
    keys = ['ID', 'Nome', 'Telefone', 'Endereço']
    values = [usuario_id, usuario_info.get('Nome'), usuario_info.get('Telefone'), usuario_info.get('Endereço')]
    print('')
    for key, value in zip(keys, values):
        print(f'{key}: {value}')


"""
# ======================================= #
# >> 1 - I N S E R I R -- U S U Á R I O - #
# ======================================= #
função inserir usuário (item 1 do projeto)--> chama a função verificar usuário
"""
def inserir_usuario(status=True, **usuario):
    if name == False:
        print("\nNome inválido. Usuário não cadastrado\n")
        return None

    valor_usuario = mudar_status(**usuario)

    if valor_usuario != None:
        print('\nUsuário já cadastrado e ativado')

    else:
        usuario['Status'] = status
        contador_id = str(len(usuarios) + 1)
        usuarios[contador_id] = usuario
        print(f'\nO usuário foi inserido com o ID {contador_id}')

        formatarDadoUsuario(usuarios[contador_id])


"""
# ======================================= #
# >> 2 - E X C L U I R -- U S U Á R I O - #
# ======================================= #
função excluir usuário (item 2 do projeto)  --> chama a função encontrar usuario
"""
def excluir_usuario():
    id_recebido = encontrar_usuario(usuarios)

    if id_recebido == False:
        print("Usuário não encontrado")

    else:
        usuarios[id_recebido]['Status'] = False

        nome = usuarios[id_recebido].get('Nome')
        print(f'O usuário {nome} está, a partir de agora, inválido')

        atualizarArquivo()

"""
# ======================================== #
# >> 3 - A T U A L I Z A - U S U Á R I O - #
# ======================================== #
##função atualizar usuário (item 3 do projeto)  --> chama a função de encontrar usuario
"""
def atualizar_usuario():
    id = encontrar_usuario(usuarios)

    if id == False:
        print('ID não encontrado')
        return None

    status = usuarios[id].get('Status')
    if status == False:
        print('\nEste usuário está inativo. Insira novamente.')
        return None

    nome = usuarios[id].get('Nome')
    print(f'O usuário selecionado foi: \n{nome}\n')

    valor = (input('''Qual informação deseja alterar?
  1 - Nome
  2 - Telefone
  3 - Endereço
  '''))

    cont = 3
    while (valor not in '123') and (cont > 0):
        valor = input('\nOpção não disponível. Qual informação deseja alterar? \n')
        cont -= 1
        if cont == 0:
            return 'Você esgotou suas chances'

    if valor == '1':
        novo_nome = input('Informe o novo Nome: ')
        usuarios[id]['Nome'] = novo_nome
    elif valor == '2':
        novo_telefone = input('Informe o novo Telefone: ')
        usuarios[id]['Telefone'] = novo_telefone
    elif valor == '3':
        novo_endereco = input('Informe o novo Endereço: ')
        usuarios[id]['Endereço'] = novo_endereco

    dados = {x: y for x, y in usuarios[id].items() if x != 'Status'}
    formatarDadoUsuario(dados)

    atualizarArquivo()


"""
# ======================================= #
# >> 4 -- E X I B I R -- U S U Á R I O -- #
# ======================================= #
"""
def exibirAlgumUsuario():
    tentativas = 0
    id_encontrado = False
    while (id_encontrado == False) and (tentativas < 3):
        id_recebido = int(input('\nInsira o ID do usuário: '))
        if (str(id_recebido) in usuarios):
            usuario = usuarios.get(f'{id_recebido}')
            if verificaUsuarioValido(usuario):
                formatarDadoUsuario(usuario)
                id_encontrado = True
            else:
                print('Usuário não encontrado')
                tentativas += 1
        else:
            print('Usuário não encontrado')
            tentativas += 1


"""
# ======================================= #
# >> 5 --- E X I B I R ---- T O D O S --- #
# ======================================= #
# PEGA O ID E OS VALORES APENAS DOS USUÁRIOS ATIVO
"""
def exibirTodosUsuarios():
    for i in usuarios:
        if verificaUsuarioValido(usuarios[i]):
            formatarDadoUsuarioComId(i, usuarios[i])


"""
# ======================================= #
# ---- M E N U --- P R I N C I P A L ---- #
# ======================================= #
##menu --> corpo executor do projeto
"""
menu_on = True
menu_principal = '''\nBoas vindas ao nosso sistema:

    1 - Inserir usuário
    2 - Excluir usuário
    3 - Atualizar usuário
    4 - Informações de um usuário
    5 - Informações de todos os usuários
    6 - Sair
    '''

while menu_on:
    print(menu_principal)

    try:
        opcao = int(input('Digite a opção desejada: '))
    except ValueError:
        print("Inválido. Digite Novamente")

    else:
        if (opcao == 1):
            print('1 - Inserir usuário')
            name, tel, endereco = dados_cadastrais()
            usuario_cadastrado = inserir_usuario(Nome=name, Telefone=tel, Endereço=endereco)

            atualizarArquivo()
        elif (opcao == 2):
            print('2 - Excluir usuário')
            excluir_usuario()
        elif (opcao == 3):
            print('3 - Atualizar usuário')
            atualizar_usuario()
        elif (opcao == 4):
            print('4 - Informações de um usuário')
            exibirAlgumUsuario()
        elif (opcao == 5):
            print('5 - Informações de todos os usuários')
            exibirTodosUsuarios()
        elif (opcao == 6):
            print('FIM DE CONSULTA')
            menu_on = False
        else:
            print('Opção inválida')